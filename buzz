Estrutura de Arquivos e Componentes:
app.component.html: Template principal.

article-list.component.html: Componente para listar os artigos.

article.service.ts: Serviço para carregar dados de artigos.

Exemplo do Código:
1. article.service.ts
typescript
Copy code
import { Injectable } from '@angular/core';
import { Observable, of } from 'rxjs';

export interface Article {
  id: number;
  title: string;
  votes: number;
}

@Injectable({
  providedIn: 'root'
})
export class ArticleService {
  private articles: Article[] = [
    { id: 1, title: 'Article 1', votes: 0 },
    { id: 2, title: 'Article 2', votes: 0 },
    { id: 3, title: 'Article 3', votes: 0 },
    // ... mais artigos
  ];

  getArticles(): Observable<Article[]> {
    return of(this.articles);
  }

  vote(articleId: number): void {
    const article = this.articles.find(a => a.id === articleId);
    if (article) {
      article.votes++;
    }
  }
}
2. article-list.component.ts
typescript
Copy code
import { Component, OnInit } from '@angular/core';
import { Article, ArticleService } from './article.service';

@Component({
  selector: 'app-article-list',
  templateUrl: './article-list.component.html',
  styleUrls: ['./article-list.component.css']
})
export class ArticleListComponent implements OnInit {
  articles: Article[] = [];

  constructor(private articleService: ArticleService) { }

  ngOnInit(): void {
    this.articleService.getArticles().subscribe(articles => {
      this.articles = articles;
    });
  }

  vote(articleId: number): void {
    this.articleService.vote(articleId);
  }
}
3. article-list.component.html
html
Copy code
<div *ngFor="let article of articles">
  <h3>{{ article.title }}</h3>
  <p>Votes: {{ article.votes }}</p>
  <button (click)="vote(article.id)">Vote</button>
</div>
4. app.component.html
html
Copy code
<h1>BuzzFeed Clone</h1>
<app-article-list></app-article-list>
Como Utilizar:
Crie os arquivos correspondentes com os nomes e conteúdos conforme os exemplos fornecidos.
Importe os módulos e serviços necessários nos módulos principais da sua aplicação.
Para testar, adicione os componentes na estrutura de roteamento ou diretamente em um componente principal.
